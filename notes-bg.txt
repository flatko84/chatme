Поради това, че проектът е учебен, се опитах да включа най-много технологии. Тъй като не ги познавах добре, нямах първоначална идея как да организирам кода. Освен това не си бях дефинирал ясна задача, а реших в хода на работа да откривам къде какъв модул е подходящ. Така се получи нещо далеч от перфектно, но учебната цел е изпълнена. Изводи:

-кодът трябва да е разделен на малки функции или методи на клас. Опитах се да измисля нещо такова, трудността идва от това, че всички listener-и трябва да слушат от една инстанция на socket, а и няма много повторения в кода, които да отделя и reuse-на.

-за работа с бази данни и връщане на response Node JS може да се справи, макар че не е най-подходящия. Всичко трябва да се изпълни non-blocking, в противен случай едно query може да hang-не целия останал код. PHP + ajax биха се справили отлично с тази част, а Node JS със socket.io може да се ползва на отделен порт предимно за чат-съобщенията. Node за realtime нужди, PHP за request -> database query -> response.

-асинхронен event-driven код ми изглежда по-труден за дебъгване, когато трябва да работи с бази данни и същевременно да връща някакви стойности към фронт-енда. Вероятно с по-добро структуриране на кода ще е по-лесно да се разбере кое пристига в грешния момент. Трудността нараства с усложняването на проекта.

-socket.io не е точно имплементация на websocket. Първоначално използва ajax и след няколко request-а проверява дали има възможност да използва websocket и ако може - надгражда до него. Pros: сигурни сме, че и по-стари браузъри ще работят и има имплементирани namespace (нещо като endpoint) и канали (стаи). Cons: твърде много рекуести при установяване на връзката.

-sequelize - ORM за SQL на node js, не е лош, но по-комплексни релации стават трудно и overwrite на настройките за many to many не работи както очаквах. Не открих начин да дефинирам името на таблицата, през която минава въпросната релация.

-passport js - модул за авторизация. Улеснява изграждането на login-система, макар че не предлага готова такава. Изградих прост вариант, който използва MySQL през sequelize.

Имам още много коментари, главно конкретно за кода и защо така съм подходил, кое работи добре и кое - не точно.